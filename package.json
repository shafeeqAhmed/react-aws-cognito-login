{
	"name": "procliq-web-editor",
	"version": "0.48.0",
	"private": true,
	"description": "",
	"engines": {
		"node": "^8.15.0",
		"npm": ">=5",
		"yarn": "1.12.3"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/tribou/react-template.git"
	},
	"author": "tribou",
	"license": "Apache-2.0",
	"homepage": "https://github.com/tribou/react-template#readme",
	"devDependencies": {
		"@firebase/app-types": "0.x",
		"@webpack-blocks/webpack2": "^0.4.0",
		"assets-webpack-plugin": "^3.4.0",
		"autoprefixer": "^7.1.4",
		"babel-cli": "^6.26.0",
		"babel-core": "^6.26.0",
		"babel-eslint": "^8.0.1",
		"babel-jest": "^22.4.1",
		"babel-loader": "^7.1.2",
		"babel-plugin-transform-class-properties": "^6.11.5",
		"babel-plugin-transform-object-assign": "^6.8.0",
		"babel-preset-env": "^1.5.2",
		"babel-preset-es2015": "^6.24.1",
		"babel-preset-react": "^6.11.1",
		"babel-preset-react-native": "^4.0.0",
		"babel-preset-stage-3": "^6.11.0",
		"babel-register": "^6.26.0",
		"browser-sync": "^2.18.13",
		"chunk-manifest-webpack-plugin": "^1.1.2",
		"compression-webpack-plugin": "^1.0.0",
		"concurrently": "^3.5.0",
		"copy-webpack-plugin": "^4.5.0",
		"cross-env": "^5.0.5",
		"css-loader": "^0.28.7",
		"electron": "1.8.3",
		"electron-devtools-installer": "^2.2.3",
		"electron-packager": "^11.0.1",
		"enzyme": "^3.1.1",
		"enzyme-adapter-react-16": "^1.0.4",
		"enzyme-to-json": "^3.2.2",
		"eslint": "^4.6.1",
		"eslint-config-prettier": "^2.9.0",
		"eslint-import-resolver-webpack": "^0.8.3",
		"eslint-loader": "^2.0.0",
		"eslint-plugin-tribou": "^1.2.2",
		"extract-text-webpack-plugin": "^3.0.0",
		"favicons-webpack-plugin": "0.0.7",
		"file-loader": "^1.1.4",
		"flow-bin": "^0.77.0",
		"flow-typed": "^2.4.0",
		"glob": "^7.1.2",
		"html-webpack-inline-source-plugin": "^0.0.9",
		"html-webpack-plugin": "^3.0.4",
		"husky": "^0.14.3",
		"identity-obj-proxy": "^3.0.0",
		"imageoptim-cli": "^1.14.8",
		"jest": "^22.4.2",
		"jest-serializer-path": "^0.1.5",
		"nock": "^9.0.14",
		"node-notifier": "^5.1.2",
		"node-notifier-cli": "^1.0.1",
		"nodemon": "^1.12.0",
		"nsp": "^3.1.0",
		"offline-plugin": "^4.8.3",
		"postcss-calc": "^6.0.0",
		"postcss-loader": "^2.0.6",
		"precss": "^2.0.0",
		"prettier": "^1.11.1",
		"pretty-quick": "^1.4.1",
		"raf": "^3.4.0",
		"raw-loader": "^0.5.1",
		"react-native": "^0.54.2",
		"react-router-native": "^4.2.0",
		"remote-redux-devtools": "^0.5.12",
		"remotedev-server": "^0.2.4",
		"rimraf": "^2.5.4",
		"uglifyjs-webpack-plugin": "^1.2.5",
		"url-loader": "^1.0.1",
		"webpack": "3.9.1",
		"webpack-blocks-split-vendor": "^0.2.0",
		"webpack-chunk-hash": "^0.5.0",
		"webpack-node-externals": "^1.3.3"
	},
	"dependencies": {
		"@material-ui/core": "^3.9.3",
		"@material-ui/icons": "^3.0.2",
		"@redux-offline/redux-offline": "^2.3.2",
		"async-mqtt": "^1.0.1",
		"aws-amplify": "^0.2.14",
		"aws-amplify-react": "^0.1.38",
		"axios": "^0.18.0",
		"babel-polyfill": "^6.26.0",
		"boom": "^7.1.1",
		"classnames": "^2.2.5",
		"codemirror": "^5.42.2",
		"codemirror-spell-checker": "^1.1.2",
		"color": "^3.1.0",
		"color-string": "^1.5.3",
		"cookies-js": "^1.2.3",
		"core-js": "^2.5.1",
		"debug": "^3.0.1",
		"downshift": "^2.2.1",
		"elasticlunr": "^0.9.5",
		"fetch-ponyfill": "^4.1.0",
		"filesize": "^3.6.1",
		"firebase": "^4.13.1",
		"firepad": "git+ssh://git@github.com/rocksauce/firepad.git#0.0.50",
		"formik": "^1.5.2",
		"formik-material-ui": "0.0.16",
		"git": "^0.1.5",
		"graphql": "^0.13.2",
		"hapi": "^17.0.0",
		"hapi-react-views": "^10.0.0",
		"immutability-helper": "^2.8.1",
		"inert": "^5.0.1",
		"isarray": "^2.0.4",
		"joi": "^13.0.1",
		"js-base64": "^2.3.2",
		"jss": "^9.8.7",
		"ksuid": "^0.4.0",
		"lodash": "^4.17.11",
		"lodash-es": "^4.17.10",
		"make-promises-safe": "^1.1.0",
		"material-ui": "^0.20.1",
		"material-ui-chip-input": "^1.0.0-beta.15",
		"moment": "^2.22.2",
		"mui-virtualized-table": "git://github.com/olivoil/mui-virtualized-table",
		"pdfkit": "git://github.com/andybar2/pdfkit.git#convert-es6",
		"pdfmake": "^0.1.38",
		"qs": "^6.5.2",
		"query-string": "^6.2.0",
		"randomcolor": "^0.5.3",
		"rc-calendar": "^9.7.10",
		"react": "^16.8.6",
		"react-avatar-editor": "^11.0.4",
		"react-codemirror2": "^5.0.1",
		"react-content-loader": "^3.2.0",
		"react-contenteditable": "^3.1.1",
		"react-custom-scrollbars": "^4.2.1",
		"react-dnd": "^5.0.0",
		"react-dnd-html5-backend": "^5.0.1",
		"react-dom": "^16.8.6",
		"react-facebook": "^5.0.3",
		"react-google-login": "^3.2.1",
		"react-helmet": "^5.2.0",
		"react-intercom": "^1.0.15",
		"react-jss": "^8.6.1",
		"react-moment": "^0.7.9",
		"react-motion": "^0.5.2",
		"react-popper": "^1.0.2",
		"react-redux": "^5.0.6",
		"react-router": "^4.2.0",
		"react-router-dom": "^4.2.2",
		"react-select": "^2.4.2",
		"react-sortable-hoc": "^0.8.3",
		"react-sound": "^1.2.0",
		"react-spinners": "^0.3.2",
		"react-svg-donut-chart": "^1.0.0",
		"react-transition-group": "^2.5.0",
		"react-user-avatar": "^1.10.0",
		"recompose": "^0.30.0",
		"redux": "^3.7.2",
		"redux-devtools-extension": "^2.13.0",
		"redux-form": "^7.0.4",
		"redux-logger": "^3.0.6",
		"redux-observable": "^0.18.0",
		"redux-promise-middleware": "^5.0.0",
		"redux-thunk": "^2.1.0",
		"reselect": "^3.0.1",
		"rollbar": "^2.2.7",
		"rxjs": "^5.4.3",
		"sanitize.css": "^5.0.0",
		"secure-filters": "^1.1.0",
		"sockjs-client": "^1.3.0",
		"source-map-support": "^0.5.0",
		"substyle": "^6.2.1",
		"uuid": "^3.3.2",
		"vision": "^5.1.0",
		"webstomp-client": "^1.2.5"
	},
	"jest": {
		"verbose": true,
		"testRegex": "/(config|src|server)/.*_test\\.js$",
		"moduleNameMapper": {
			"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
			"\\.(css)$": "identity-obj-proxy"
		},
		"moduleDirectories": [
			"node_modules",
			"<rootDir>"
		],
		"snapshotSerializers": [
			"enzyme-to-json/serializer"
		],
		"watchPathIgnorePatterns": [
			"build"
		],
		"setupTestFrameworkScriptFile": "./testSetup.js"
	},
	"browserslist": [
		"ie > 10",
		"ie_mob > 10"
	],
	"scripts": {
		"precommit": "pretty-quick --staged",
		"prettier": "prettier '**/*.{js,md,json}' --write",
		"heroku-postbuild": "npm run build && rimraf .npm-packages-offline-cache",
		"commitlint": "VALID_COMMIT=$(git log --pretty=format:\"%B\" master...HEAD | grep PQ-[0-9]); [ ! -z \"$VALID_COMMIT\" ] && (echo 'commitlint: Valid commit found üëç ' && exit 0) || (echo 'commitlint: Valid JIRA ticket ID required in at least one commit message üëé ' && exit 1)",
		"desktop": "npm run desktop-build && electron build/desktop/",
		"desktop-build": "rimraf build/desktop && cross-env NODE_ENV=production webpack --config config/webpack/desktop.js",
		"desktop-package": "npm run desktop-build && electron-packager build/desktop/ \"React Template\" --overwrite --asar --all --out build --prune false --icon desktop/icon/icon --appVersion ${npm_package_version}",
		"desktop-dev": "cross-env NODE_ENV=development electron build/desktop/",
		"notify-optimize": "notify --icon 'https://imageoptim.com/icon.png' -t 'ImageOptim' -m 'Image optimization complete'",
		"optimize-images": "IMAGE_FILES=$(git diff --name-only $(git describe --abbrev=0 --tags)..HEAD static/images/); if [ $(echo \"$IMAGE_FILES\" | grep . | wc -l) -ne 0 ]; then echo \"$IMAGE_FILES\" | imageOptim && git add --all static/images && npm run --silent notify-optimize; fi",
		"upgrade-deps": "npm run yarn-bin -- cache clean && rm -rf node_modules .npm-packages-offline-cache flow-typed && rm yarn.lock && npm run yarn && flow-typed install && cat yarn.lock | grep registry",
		"start": "node build/server.js",
		"start-prod": "time npm run --silent build && date && cross-env NODE_ENV=production npm start",
		"build": "rimraf build && cross-env NODE_OPTIONS=--max_old_space_size=4096 NODE_ENV=production webpack",
		"devtools-server": "echo; echo; echo 'Hit Cmd+Ctrl+ArrowUp to open remote monitoring in Chrome'; echo; echo; remotedev --hostname=localhost --port=8001",
		"dev": "npm run yarn && rimraf build && concurrently --kill-others -n 'APP,FLOW' -p '[{name}]' 'cross-env DEBUG=procliq* DEBUG_COLORS=true DEBUG_DEPTH=4 SHOW_ERRORS=true NODE_ENV=development nodemon -x node server/index.dev.js' 'npm run --silent watch-flow'",
		"dev-mock": "npm run yarn && rimraf build && concurrently --kill-others -n 'APP,FLOW' -p '[{name}]' 'cross-env MOCK_WALKIE_API=true DEBUG=procliq* DEBUG_COLORS=true DEBUG_DEPTH=4 SHOW_ERRORS=true NODE_ENV=development nodemon -x node server/index.dev.js' 'npm run --silent watch-flow'",
		"dev-a": "npm run yarn && react-native run-android && npm run devtools-server",
		"dev-i": "npm run yarn && react-native run-ios && npm run devtools-server",
		"dev-w": "npm run yarn && rimraf build && concurrently --kill-others -n 'APP,FLOW' -p '[{name}]' 'cross-env DEBUG=procliq* DEBUG_COLORS=true DEBUG_DEPTH=4 PORT=4000 ROOT_URL=http://localhost:4000 SHOW_ERRORS=true NODE_ENV=development nodemon -x node server/index.dev.js' 'npm run --silent watch-flow'",
		"f": "flow",
		"flow": "flow --quiet; test $? -eq 0 -o $? -eq 2",
		"flow-ci": "flow check .",
		"lint": "eslint --ignore-path .gitignore flow src server config",
		"lint-cache": "eslint --cache --ignore-path .gitignore flow src server config",
		"test": "concurrently -n 'LINT,FLOW,NSP,JEST' -p '[{name}]' 'npm run lint' 'npm run --silent flow-ci' 'npm run --silent test-nsp; exit 0 # For React Native libs :(' && npm run --silent test-jest",
		"test-jest": "cross-env NODE_ENV=test jest --coverage",
		"test-rn": "cross-env NODE_ENV=test jest --coverage --preset react-native --testRegex '/(config|src)/.*_test.(ios|android)\\.js$'",
		"test-nsp": "nsp check; true",
		"watch": "nodemon -i .eslintcache -x npm run --silent test",
		"watch-flow": "nodemon -w . -i .eslintcache -i build -x npm run --silent flow",
		"watch-lint": "nodemon -w . -i .eslintcache -x npm run --silent lint-cache",
		"watch-test": "cross-env NODE_ENV=test jest --watch --notify --watchman",
		"yarn": "npm run --silent yarn-bin -- install --prefer-offline",
		"yarn-bin": "node bin/yarn-${npm_package_engines_yarn}.js"
	}
}
